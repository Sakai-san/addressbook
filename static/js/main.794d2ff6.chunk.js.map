{"version":3,"sources":["ducks/Home/types.ts","ducks/Settings/types.ts","ducks/Home/actions.ts","ducks/Home/operations.ts","ducks/Home/index.ts","ducks/Home/reducers.ts","ducks/Settings/reducers.ts","ducks/Search/types.ts","ducks/Settings/actions.ts","ducks/Settings/operations.ts","ducks/Settings/index.ts","ducks/Search/reducers.ts","ducks/Search/index.ts","Row.tsx","ducks/Search/actions.ts","ducks/Search/SearchComponent.tsx","ducks/Home/HomeComponent.tsx","ducks/Settings/SettingsComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["actionTypes","isFetchingAction","action","type","FETCHING_USERS","isFetchAction","FETCH_USERS","isLoading","payload","data","page","nationality","amountOfRows","dispatch","actions","fetch","then","r","json","results","homeReducer","state","users","isFetching","SET_NATIONALITY","settingsReducer","searchReducer","terms","SEARCH_SEARCH","first","last","Row","user","style","useHover","active","bind","useState","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","modifiers","name","options","element","styles","attributes","className","ref","picture","thumbnail","src","alt","login","username","email","popper","location","street","number","postcode","city","phone","cell","arrow","search","useStyles","makeStyles","theme","margin","spacing","SearchComponent","firstNameRef","useRef","lastNameRef","useDispatch","classes","onSubmit","e","preventDefault","current","querySelector","value","noValidate","autoComplete","TextField","id","label","Button","size","color","variant","onClick","HomeComponent","isSearchActive","useSelector","searchTems","filtered","filter","toUpperCase","length","concat","filterByName","home","settings","useEffect","loadMoreRows","startIndex","stopIndex","Promise","resolve","homeOperations","rowRenderer","key","index","to","isRowLoaded","rowCount","onRowsRendered","registerChild","disableHeight","width","height","ROW_HEIGHT","rowHeight","NATIONALIIES","SettingsComponent","nationalitySet","onChangeHandler","settingsOperations","target","map","checked","onChange","App","path","Boolean","window","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","ducks","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.794d2ff6.chunk.js","sourcesContent":["export enum actionTypes {\n  FETCH_USERS = \"@USERS/fetch\",\n  FETCHING_USERS = \"@USERS/fetching\",\n}\n\nexport interface IUser {\n  gender?: string;\n  name?: {\n    title?: string;\n    first?: string;\n    last?: string;\n  };\n  location?: {\n    street?: {\n      number?: number;\n      name?: string;\n    };\n    city?: string;\n    state?: string;\n    country?: string;\n    postcode?: number;\n    coordinates?: {\n      latitude?: string;\n      longitude?: string;\n    };\n    timezone?: {\n      offset?: string;\n      description?: string;\n    };\n  };\n  email?: string;\n  login?: {\n    uuid?: string;\n    username?: string;\n    password?: string;\n    salt?: string;\n    md5?: string;\n    sha1?: string;\n    sha256?: string;\n  };\n  dob?: {\n    date?: string;\n    age?: number;\n  };\n  registered?: {\n    date?: string;\n    age?: number;\n  };\n  phone?: string;\n  cell?: string;\n  id?: {\n    name?: string;\n    value?: string;\n  };\n  picture?: {\n    large?: string;\n    medium?: string;\n    thumbnail?: string;\n  };\n  nat?: string;\n}\n\nexport interface IHomeStore {\n  users: IUser[];\n  isFetching: boolean;\n}\n\ninterface IAction {\n  type: actionTypes;\n}\n\ninterface IActionFetching extends IAction {\n  payload: boolean;\n}\n\ninterface IActionFetch extends IAction {\n  payload: IUser[];\n}\n\n// TYPE GUARDS\nexport const isFetchingAction = (action: IAction): action is IActionFetching =>\n  action.type === actionTypes.FETCHING_USERS;\n\nexport const isFetchAction = (action: IAction): action is IActionFetch =>\n  action.type === actionTypes.FETCH_USERS;\n","export enum actionTypes {\n  SET_NATIONALITY = \"@USERS/setNationality\",\n}\n\nexport type TypeSettingsStore = string;\n\nexport interface IAction {\n  type: actionTypes;\n  payload: string;\n}\n","import { actionTypes } from \"./types\";\n\nconst makeUserFectch = (data: any) => ({\n  type: actionTypes.FETCH_USERS,\n  payload: data || [],\n});\n\nconst makeUserFectching = (isLoading: boolean) => ({\n  type: actionTypes.FETCHING_USERS,\n  payload: isLoading,\n});\n\nexport default {\n  makeUserFectching,\n  makeUserFectch,\n};\n","import { Dispatch } from \"redux\";\nimport actions from \"./actions\";\n\nconst fetchUsers = (\n  page: number,\n  nationality: string,\n  amountOfRows: number\n) => (dispatch: Dispatch) => {\n  dispatch(actions.makeUserFectching(true));\n\n  fetch(\n    `https://randomuser.me/api/?nat=${nationality}&page=${page}&results=${amountOfRows}`\n  )\n    .then((r) => r.json())\n    .then((data) => dispatch(actions.makeUserFectch(data.results)));\n};\n\nexport default { fetchUsers };\n","import homeReducer from \"./reducers\";\nexport { default as homeOperations } from \"./operations\";\nexport default homeReducer;\n","import { Reducer } from \"redux\";\nimport { IHomeStore, isFetchingAction, isFetchAction } from \"./types\";\nimport actions from \"./actions\";\n\nconst reducer: Reducer<\n  IHomeStore,\n  ReturnType<typeof actions.makeUserFectch | typeof actions.makeUserFectching>\n> = (\n  state = {\n    users: [],\n    isFetching: false,\n  },\n  action\n) => {\n  if (isFetchingAction(action)) {\n    return {\n      ...state,\n      isFetching: action.payload,\n    };\n  } else if (isFetchAction(action)) {\n    return {\n      users: [...state.users, ...action.payload],\n      isFetching: false,\n    };\n  } else {\n    return state;\n  }\n};\n\nexport default reducer;\n","import { Reducer } from \"redux\";\nimport { actionTypes, TypeSettingsStore } from \"./types\";\nimport actions from \"./actions\";\n\nconst reducer: Reducer<\n  TypeSettingsStore,\n  ReturnType<typeof actions.makeSetNationality>\n> = (state = \"ch\", action) => {\n  if (action.type === actionTypes.SET_NATIONALITY) {\n    return action.payload;\n  } else {\n    return state;\n  }\n};\n\nexport default reducer;\n","export enum actionTypes {\n  SEARCH_SEARCH = \"@SEARCH/search\",\n}\n\nexport interface ISearchTerms {\n  first: string | undefined;\n  last: string | undefined;\n}\n\nexport interface ISearchStore {\n  terms: ISearchTerms | null;\n}\nexport interface IAction {\n  type: actionTypes;\n  payload: ISearchTerms;\n}\n","import { actionTypes } from \"./types\";\n\nconst makeSetNationality = (nationality: string) => ({\n  type: actionTypes.SET_NATIONALITY,\n  payload: nationality,\n});\n\nexport default {\n  makeSetNationality,\n};\n","import { Dispatch } from \"redux\";\nimport actions from \"./actions\";\n\nconst setNationality = (nationality: string) => (dispatch: Dispatch) =>\n  dispatch(actions.makeSetNationality(nationality));\n\nexport default { setNationality };\n","import settingsReducer from \"./reducers\";\nexport { default as settingsOperations } from \"./operations\";\nexport default settingsReducer;\n","import { Reducer } from \"redux\";\nimport { actionTypes, ISearchStore } from \"./types\";\nimport actions from \"./actions\";\n\nconst reducer: Reducer<ISearchStore, ReturnType<typeof actions.makeSearch>> = (\n  state = {\n    terms: null,\n  },\n  action\n) => {\n  if (action.type === actionTypes.SEARCH_SEARCH) {\n    return {\n      ...state,\n      terms: action?.payload\n        ? {\n            first: action.payload.first,\n            last: action.payload.last,\n          }\n        : action.payload,\n    };\n  } else {\n    return state;\n  }\n};\n\nexport default reducer;\n","import searchReducer from \"./reducers\";\nexport default searchReducer;\n","import React, { FunctionComponent, useState } from \"react\";\nimport { usePopper } from \"react-popper\";\nimport { useHover } from \"use-events\";\nimport { IUser } from \"./ducks/Home/types\";\n\nimport \"./Row.css\";\n\ninterface IRowProps {\n  user: IUser;\n  style: object;\n}\n\nconst Row: FunctionComponent<IRowProps> = ({ user, style }) => {\n  const [active, bind] = useHover();\n  const [\n    referenceElement,\n    setReferenceElement,\n  ] = useState<HTMLDivElement | null>(null);\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(\n    null\n  );\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null);\n\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\n    modifiers: [{ name: \"arrow\", options: { element: arrowElement } }],\n  });\n\n  return (\n    <>\n      <div className=\"Row\" ref={setReferenceElement} style={style} {...bind}>\n        <div className=\"Column_10\">\n          {user?.picture?.thumbnail && (\n            <img\n              src={user.picture.thumbnail}\n              alt={`${user?.name?.first || \"\"} ${user?.name?.last || \"\"}`}\n            />\n          )}\n        </div>\n        <div className=\"Column_20\">{user?.name?.first}</div>\n        <div className=\"Column_20\">{user?.name?.last}</div>\n        <div className=\"Column_20\">{user?.login?.username}</div>\n        <div className=\"Column_30\">{user?.email}</div>\n      </div>\n\n      {active && (\n        <div\n          className=\"Popper\"\n          ref={setPopperElement}\n          style={styles.popper}\n          {...attributes.popper}\n        >\n          <div>\n            <div>\n              {user?.location?.street?.number}, {user?.location?.street?.name}\n            </div>\n            <div>\n              {user?.location?.postcode}, {user?.location?.city}\n            </div>\n            <div>{user?.location?.state}</div>\n            <div>{user?.phone}</div>\n            <div>{user?.cell}</div>\n          </div>\n          <div ref={setArrowElement} style={styles.arrow} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Row;\n","import { actionTypes, ISearchTerms } from \"./types\";\n\nconst makeSearch = (search: ISearchTerms | null) => ({\n  type: actionTypes.SEARCH_SEARCH,\n  payload: search,\n});\n\nexport default {\n  makeSearch,\n};\n","import React, { FunctionComponent, useRef, FormEvent, MouseEvent } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport actions from \"./actions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport \"./SearchComponent.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst SearchComponent: FunctionComponent = () => {\n  const firstNameRef = useRef<HTMLDivElement | null>(null);\n  const lastNameRef = useRef<HTMLDivElement | null>(null);\n\n  const dispatch = useDispatch();\n\n  const onSubmitHandler = (e: FormEvent) => {\n    e.preventDefault();\n\n    dispatch(\n      actions.makeSearch({\n        first: firstNameRef?.current?.querySelector(\"input\")?.value,\n        last: lastNameRef?.current?.querySelector(\"input\")?.value,\n      })\n    );\n  };\n\n  const onResetHandler = (e: any | MouseEvent<HTMLElement>) =>\n    dispatch(actions.makeSearch(null));\n\n  const classes = useStyles();\n\n  return (\n    <form\n      className=\"SearchComponent\"\n      onSubmit={onSubmitHandler}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        ref={firstNameRef}\n        id=\"first-name\"\n        label=\"First name\"\n        className={classes.margin}\n      />\n      <TextField\n        ref={lastNameRef}\n        id=\"last-name\"\n        label=\"Last name\"\n        className={classes.margin}\n      />\n      <Button\n        size=\"medium\"\n        color=\"primary\"\n        variant=\"contained\"\n        className={classes.margin}\n        type=\"submit\"\n      >\n        Submit\n      </Button>\n      <Button\n        size=\"medium\"\n        variant=\"contained\"\n        className={classes.margin}\n        onClick={onResetHandler}\n        type=\"reset\"\n      >\n        Reset\n      </Button>\n    </form>\n  );\n};\n\nexport default SearchComponent;\n","import React, { FunctionComponent, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { InfiniteLoader, List, AutoSizer } from \"react-virtualized\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Row from \"../../Row\";\nimport SearchComponent from \"../Search/SearchComponent\";\nimport { homeOperations } from \"./index\";\nimport { IUser } from \"./types\";\nimport { ISearchTerms } from \"../Search/types\";\nimport { IReduxStore } from \"../reduxStoreType\";\n\nimport \"./HomeComponent.css\";\nimport \"react-virtualized/styles.css\"; // only needs to be imported once\n\nconst BATCH_ROW = 50;\nconst AMOUNT_OF_VISIBLE_ROWS = 10;\nconst AMOUNT_OF_MAX_ROWS = 1000;\nconst ROW_HEIGHT = 50;\n\nconst filterByName = (users: IUser[], searchTems: ISearchTerms | null) => {\n  const filtered = users.filter(\n    (user) =>\n      user?.name?.first?.toUpperCase?.() ===\n        searchTems?.first?.toUpperCase?.() &&\n      user?.name?.last?.toUpperCase?.() === searchTems?.last?.toUpperCase?.()\n  );\n  if (filtered.length > 0) {\n    // workaround. Add two empty rows for the modal not to be cropped\n    return filtered.concat([{}, {}, {}]);\n  } else {\n    return filtered;\n  }\n};\n\nconst HomeComponent: FunctionComponent = () => {\n  const page = useRef<number>(-1);\n  const isSearchActive = useSelector(\n    (state: IReduxStore) => state.search.terms\n  );\n  const users = useSelector((state: IReduxStore) =>\n    !isSearchActive\n      ? state.home.users\n      : filterByName(state.home.users, state.search.terms)\n  );\n  const isFetching = useSelector((state: IReduxStore) => state.home.isFetching);\n  const nationality = useSelector((state: IReduxStore) => state.settings);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    loadMoreRows({});\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const isRowLoaded = ({ index }: any) => !!users[index];\n\n  const loadMoreRows = ({ startIndex, stopIndex }: any) => {\n    page.current = page.current + 1;\n    return Promise.resolve(\n      dispatch(homeOperations.fetchUsers(page.current, nationality, BATCH_ROW))\n    );\n  };\n\n  const rowRenderer = ({ key, index, style }: any) => (\n    <Row key={key} user={users[index]} style={style} />\n  );\n\n  return (\n    <div>\n      <div className=\"Sticky\">\n        <SearchComponent />\n      </div>\n      <div className=\"LinkToSettings\">\n        <Link to=\"/settings\">Settings</Link>\n      </div>\n\n      {isSearchActive && (\n        <div className=\"Message\">\n          Infinite loader is disabled while the search is in use &#129302;.\n        </div>\n      )}\n\n      <InfiniteLoader\n        isRowLoaded={isRowLoaded}\n        loadMoreRows={loadMoreRows}\n        rowCount={AMOUNT_OF_MAX_ROWS}\n      >\n        {({ onRowsRendered, registerChild }) => (\n          <AutoSizer disableHeight>\n            {({ width }) => (\n              <List\n                width={width}\n                height={ROW_HEIGHT * AMOUNT_OF_VISIBLE_ROWS}\n                onRowsRendered={onRowsRendered}\n                ref={registerChild}\n                rowCount={users.length}\n                rowHeight={ROW_HEIGHT}\n                rowRenderer={rowRenderer}\n              />\n            )}\n          </AutoSizer>\n        )}\n      </InfiniteLoader>\n\n      {!isSearchActive && isFetching && (\n        <div className=\"Message Loading\">Loading... &#9203;</div>\n      )}\n    </div>\n  );\n};\n\nexport default HomeComponent;\n","import React, { FunctionComponent, ChangeEvent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { settingsOperations } from \"./index\";\nimport { IReduxStore } from \"../reduxStoreType\";\n\nconst NATIONALIIES = [\"ch\", \"es\", \"fr\", \"gb\"];\n\nconst SettingsComponent: FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const nationalitySet = useSelector((state: IReduxStore) => state.settings);\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) =>\n    dispatch(settingsOperations.setNationality(e.target.value));\n\n  return (\n    <div>\n      <Link to=\"/\">Home</Link>\n\n      <p>Select the nationality you want the search to done in. </p>\n\n      {NATIONALIIES.map((nationality) => (\n        <div key={nationality}>\n          <label>\n            {nationality.toUpperCase()}\n            <input\n              type=\"radio\"\n              name=\"nationality\"\n              value={nationality}\n              checked={nationality === nationalitySet}\n              onChange={onChangeHandler}\n            />\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SettingsComponent;\n","import React, { FunctionComponent } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomeComponent from \"./ducks/Home/HomeComponent\";\nimport SettingsComponent from \"./ducks/Settings/SettingsComponent\";\n\nimport \"./App.css\";\n\nconst App: FunctionComponent = () => (\n  <div className=\"Wrapper\">\n    <Router>\n      <Switch>\n        <Route path=\"/settings\">\n          <SettingsComponent />\n        </Route>\n        <Route path=\"/\">\n          <HomeComponent />\n        </Route>\n      </Switch>\n    </Router>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { compose, createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport * as ducks from \"./ducks/index\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  combineReducers(ducks),\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}